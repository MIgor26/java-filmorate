CREATE TABLE IF NOT EXISTS mpa (
    mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Допускается возможность изменения id вручную
    mpa_name varchar(50) -- Согласно перечня в ТЗ максимальная длина 5
);

CREATE TABLE IF NOT EXISTS films (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    title varchar(55) NOT NULL, -- Чтобы вместилось название: "История Аси Клячиной, которая любила, да не вышла замуж"
    description varchar(200) NOT NULL, -- Согласно ТЗ ограничение 200 символов. RF При возможности увеличить
    release_date timestamp,
    duration integer,
    mpa_id integer REFERENCES mpa (mpa_id) ON DELETE RESTRICT, -- Нельзя удалять запись из таблицы mpa
    -- как в основной таблице films есть на неё ссылки.
    CONSTRAINT not_empty_title CHECK (title <> ''),
    CONSTRAINT positive_duration CHECK (duration > 0),
    CONSTRAINT check_release_date CHECK (release_date > '1895-12-28')
);

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    email varchar(50) NOT NULL,
    login varchar(50) NOT NULL,
    name varchar(50), -- Алиса написала, что самое длинное русское имя "Александрина" = 12 букв
    birthday timestamp,
    CONSTRAINT not_empty_data CHECK (email <> '' AND login <> ''),
    CONSTRAINT check_birthday CHECK (birthday <= CURRENT_DATE) -- День рождения не может быть в будущем
);

CREATE TABLE IF NOT EXISTS film_like (-- Таблица без первичного ключа, так как сочетание внешних ключей всегда уникально
    film_id BIGINT REFERENCES films (id),
    user_id BIGINT REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Допускается возможность изменения id вручную
    genre_name varchar(50) NOT NULL -- Не нулевой, так как если есть id то и фильм должен быть
);

CREATE TABLE IF NOT EXISTS film_genre (-- Таблица без первичного ключа, так как сочетание внешних ключей всегда уникально
    film_id BIGINT REFERENCES films (id),
    genre_id integer REFERENCES genre (genre_id)
);

CREATE TABLE IF NOT EXISTS friendship (
    id BIGINT REFERENCES users (id), -- id пользователя отправителя заявки в друзья
    friend_id BIGINT REFERENCES users (id) -- id пользователя получателя заявки в друзья
    -- confirmation bool -- флаг подтверждения заявки в друзья
);

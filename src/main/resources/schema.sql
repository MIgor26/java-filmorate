DROP TABLE IF EXISTS film_like;
DROP TABLE IF EXISTS friendship;
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS mpa;

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL

);

CREATE TABLE IF NOT EXISTS films (
    id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description varchar(200) NOT NULL, -- Согласно ТЗ ограничение 200 символов.
    release_date DATE NOT NULL,
    duration INTEGER NOT NULL,
    -- mpa_id INTEGER NOT NULL -- Нельзя удалять запись из таблицы mpa
    mpa_id INTEGER NOT NULL REFERENCES mpa (mpa_id) ON DELETE RESTRICT -- Нельзя удалять запись из таблицы mpa
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER NOT NULL REFERENCES films (id) ON DELETE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genre (genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(255) NOT NULL UNIQUE,
    login varchar(255) NOT NULL UNIQUE,
    name varchar(255) NOT NULL,
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS film_like (
    film_id INT NOT NULL REFERENCES films (id) ON DELETE CASCADE,
    user_id INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friendship (
    user_id INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    friend_id INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    status BOOLEAN NOT NULL,
    PRIMARY KEY (user_id, friend_id)
);
